;;;  Name: Martin Nikoltchev
;;;  Email: mnikoltchev@berkeley.edu

;;; Q1.

(fact (add_to_all ?a () ()))
(fact (add_to_all ?a (?first . ?rest) ((?a . ?first) . ?other))
	(add_to_all ?a ?rest ?other))

(query (add_to_all a ((b) (c d)) ((a b) (a c d))))
; expect Success!
(query (add_to_all a ((b c) (b) (foo)) ?what))
; expect Success! ; what: ((a b c) (a b) (a foo))
(query (add_to_all ?what ((c) (d e) ()) ((b c) (b d e) (b))))
; expect Success! ; what: b
(query (add_to_all ?what ?list ((b c) (d e) (b))))
; expect Failed.

;;; Q2.

(fact (append () ?a ?a))  
(fact (append (?x . ?r) ?b (?x . ?c))
      (append ?r ?b ?c))   

(fact (sublists () (())))
(fact (sublists (?f . ?r) ?rr)   
	(add_to_all ?f ?o ?i)
	(append ?o ?i ?rr)  
	(sublists ?r ?o))



(query (sublists (1 2 3) ?subs))
; expect Success! ; subs: (() (3) (2) (2 3) (1) (1 3) (1 2) (1 2 3))

;;; Q3.

(fact (fruits apple banana cherry date elderberry fig guava))

(fact (match ?x ?x))   
(fact (prefix () ?s))     
(fact (prefix (?f . ?p) (?f . ?s))   
      (prefix ?p ?s))  
(fact (last_elem (?s . ?r) ?s)
      (match ?r ()))
(fact (last_elem (?s . ?r) ?z)
      (last_elem ?r ?z))
(fact (first_fruit ?last ?ret)  
      (fruits . ?cur_fuits) 
      (last_elem ?ret ?last)
      (prefix ?ret ?cur_fuits))

(fact (fruits_tail ?f . ?rest)
      (fruits . ?cur_fuits)
      (first_fruit ?f ?first_fruit)   
      (append ?first_fruit ?rest ?cur_fuits))

(query (fruits_tail date elderberry fig guava))
; expect Success!
(query (fruits_tail banana . ?after_banana))
; expect Success! ; after_banana: (cherry date elderberry fig guava)
(query (fruits_tail ?e fig guava))
; expect Success! ; e: elderberry

;;; Q4.

(fact (first (?n . ?r) ?n))
(fact (fruit_range ?x ?y ?z)
      (prefix ?z ?after_first)
      (fruits_tail ?x . ?after_first)
      (last_elem ?z ?last_fruit)
      (first ?after_fruit2 ?y)
      (fruits_tail ?last_fruit . ?after_fruit2))

(query (fruit_range cherry guava (date elderberry fig)))
; expect Success!
(query (fruit_range cherry elderberry date))
; expect Failed.
(query (fruit_range cherry elderberry ?between))
; expect Success! ; between: (date)
(query (fruit_range cherry date ()))
; expect Failed.
(query (fruit_range banana fig ?between))
; expect Success! ; between: (cherry date elderberry)


;;; Q5.

(fact (increment 1 2))
(fact (increment 2 3))
(fact (increment 3 4))
(fact (increment 4 5))
(fact (increment 5 6))
(fact (increment 6 7))
(fact (increment 7 8))
(fact (increment 8 9))

(fact (max 1 ?f ?f))   
(fact (max ?f 1 ?f)
      (max 2 ?f ?f))
(fact (max ?f ?s ?t)   
      (increment ?f_1 ?f)
      (increment ?s_1 ?s)   
      (increment ?t_1 ?t)
      (max ?f_1 ?s_1 ?t_1))

(query (max 2 4 4) (max 4 2 4) (max 4 4 4))
; expect Success!
(query (max 3 ?x ?x) (max ?x 5 5))
; expect Success! ; x: 3 ; x: 4 ; x: 5
(query (max 1 2 3))
; expect Failed.


;;; Q6.

(fact (add       1 ?x ?x+1)
      (increment ?x ?x+1))    
(fact (add       ?x+1 ?y ?z+1)
      (increment ?x ?x+1)
      (increment ?z ?z+1)
      (add       ?x ?y ?z))   

(fact (reduce_to ?val ?meth ?val))
(fact (reduce_to ?val ?meth (?f . (?s . ?r))) (?meth ?f ?s ?var)
	(reduce_to ?val ?meth (?var ?r)))


(query (reduce_to ?value add 1 1 2 3))
; expect Success! ; value: 7
(query (reduce_to ?value max 1 2 4 1 3 1))
; expect Success! ; value: 4
(query (reduce_to 4 add . ?addends))
; expect Success! ; addends: (1 3) ; addends: (2 2) ; addends: (3 1) ; addends: (1 1 2) ; addends: (1 2 1) ; addends: (1 1 1 1) ; addends: (2 1 1)

